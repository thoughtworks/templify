<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.thoughtworks.templify</groupId>
    <artifactId>templify</artifactId>
    <packaging>maven-plugin</packaging>
    <version>0.1.0-SNAPSHOT</version>
    <name>templify templater maven plugin</name>
    <description>A Maven plugin for automating template-based configurations and placeholder replacements across XML, JSON, Java, and more</description>
    <url>http://maven.apache.org</url>
    <properties>

        <!-- General Properties -->
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!-- Maven command's input variables -->
        <unit.only>${unitOnly}</unit.only>
        <failsafe.only>${skipTests}</failsafe.only>

        <!-- Testing -->
        <pitest.version>1.19.4</pitest.version>
        <pitest.junit5.version>1.2.3</pitest.junit5.version>
        <failsafe.version>3.1.2</failsafe.version>
        <junit.version>5.10.1</junit.version>
        <assertj.version>3.25.3</assertj.version>
        <itf.version>0.13.1</itf.version>
        <mojo.executor.version>2.4.0</mojo.executor.version>

        <!-- Dependencies versions -->
        <maven.plugin.libs.version>3.9.6</maven.plugin.libs.version>
        <maven-project>2.2.1</maven-project>
        <commons-io.version>2.15.1</commons-io.version>
        <json-path.version>2.9.0</json-path.version>
        <snakeyaml.version>2.2</snakeyaml.version>
        <yaml-path.version>0.0.8</yaml-path.version>
        <jackson-databind.version>2.16.1</jackson-databind.version>
        <guice.version>7.0.0</guice.version>
        <mockito-core.version>5.10.0</mockito-core.version>
        <toml4j.version>0.7.2</toml4j.version>
        <reflections.version>0.10.2</reflections.version>
        <guava.version>33.0.0-jre</guava.version>
        <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
        <maven-plugin-plugin.version>3.8.1</maven-plugin-plugin.version>
        <maven-surefire-plugin.version>3.2.5</maven-surefire-plugin.version>
        <maven-surefire-junit5-tree-reporter.version>1.2.1</maven-surefire-junit5-tree-reporter.version>
        <javafaker.version>1.0.2</javafaker.version>
        <jacoco-maven-plugin.version>0.8.9</jacoco-maven-plugin.version>
        <plexus-component-metadata.version>2.1.1</plexus-component-metadata.version>
        <maven-surefire-report-plugin.version>3.0.0</maven-surefire-report-plugin.version>
        <com.google.cloud.artifactregistry.version>2.2.0</com.google.cloud.artifactregistry.version>
        <maven-compiler-plugin.version>3.12.1</maven-compiler-plugin.version>
        <maven-shade-plugin.version>3.5.1</maven-shade-plugin.version>
        <maven-plugin-annotations.version>3.11.0</maven-plugin-annotations.version>
        <plexus-utils.version>3.5.1</plexus-utils.version>
        <maven-dependency-plugin.version>3.8.1</maven-dependency-plugin.version>

        <!-- PIT -->
        <pit.conf.timeoutConstant>15000</pit.conf.timeoutConstant>
        <pit.conf.targetClasses>com.thoughtworks.*</pit.conf.targetClasses>
        <pit.conf.targetTests>com.thoughtworks.*Test</pit.conf.targetTests>
        <pit.conf.excludedClasses>com.thoughtworks.*Mojo</pit.conf.excludedClasses>
        <pit.conf.excludedTestClasses>com.thoughtworks.*MojoIT</pit.conf.excludedTestClasses>
        <!-- INFO: Try to refactory code in order to fix TIME_OUT MINIONS instead of increasing this -->
        <pit.conf.withHistory>false</pit.conf.withHistory>
        <pit.conf.siteReportName>mutation-tests-report</pit.conf.siteReportName>

        <!-- Maven Shade -->
        <maven.shade.conf.mainClass>com.thoughtworks.cli.Hello</maven.shade.conf.mainClass>

        <!-- Jacoco -->
        <jacoco.package.line.coveredratio>0.80</jacoco.package.line.coveredratio>

        <!-- Maven surefire -->
        <surefire.report.printStacktraceOnError>true</surefire.report.printStacktraceOnError>
        <surefire.report.printStacktraceOnFailure>true</surefire.report.printStacktraceOnFailure>
        <surefire.report.printStdoutOnError>true</surefire.report.printStdoutOnError>
        <surefire.report.printStdoutOnSuccess>false</surefire.report.printStdoutOnSuccess>
        <surefire.report.printStderrOnError>true</surefire.report.printStderrOnError>
        <surefire.report.printStderrOnFailure>true</surefire.report.printStderrOnFailure>
        <surefire.report.printStdoutOnFailure>true</surefire.report.printStdoutOnFailure>
        <surefire.report.printStderrOnSuccess>false</surefire.report.printStderrOnSuccess>
        <surefire.report.theme>UNICODE</surefire.report.theme>
        <surefire.report.consoleOutputReporter>false</surefire.report.consoleOutputReporter>
        <surefire.report.reportFormat>plain</surefire.report.reportFormat>


    </properties>

    <dependencies>

        <!-- https://mvnrepository.com/artifact/org.apache.maven/maven-plugin-api -->
        <dependency>
            <groupId>org.apache.maven</groupId>
            <artifactId>maven-plugin-api</artifactId>
            <version>${maven.plugin.libs.version}</version>
            <scope>provided</scope>
        </dependency>

        <!--
        https://mvnrepository.com/artifact/org.apache.maven.plugin-tools/maven-plugin-annotations -->
        <dependency>
            <groupId>org.apache.maven.plugin-tools</groupId>
            <artifactId>maven-plugin-annotations</artifactId>
            <version>${maven-plugin-annotations.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.codehaus.plexus/plexus-utils -->
        <dependency>
            <groupId>org.codehaus.plexus</groupId>
            <artifactId>plexus-utils</artifactId>
            <version>${plexus-utils.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.soebes.itf.jupiter.extension/itf-extension-maven -->
        <dependency>
            <groupId>com.soebes.itf.jupiter.extension</groupId>
            <artifactId>itf-extension-maven</artifactId>
            <version>${itf.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.soebes.itf.jupiter.extension/itf-assertj -->
        <dependency>
            <groupId>com.soebes.itf.jupiter.extension</groupId>
            <artifactId>itf-assertj</artifactId>
            <version>${itf.version}</version>
            <scope>test</scope>
        </dependency>

        <!--
        https://mvnrepository.com/artifact/com.soebes.itf.jupiter.extension/itf-jupiter-extension -->
        <dependency>
            <groupId>com.soebes.itf.jupiter.extension</groupId>
            <artifactId>itf-jupiter-extension</artifactId>
            <version>${itf.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.assertj/assertj-core -->
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
        <dependency>
            <groupId>com.github.javafaker</groupId>
            <artifactId>javafaker</artifactId>
            <version>${javafaker.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.yaml</groupId>
                    <artifactId>snakeyaml</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
        <dependency>
            <groupId>org.yaml</groupId>
            <artifactId>snakeyaml</artifactId>
            <version>${snakeyaml.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson-databind.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path -->
        <dependency>
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${json-path.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/io.github.yaml-path/yaml-path -->
        <dependency>
            <groupId>io.github.yaml-path</groupId>
            <artifactId>yaml-path</artifactId>
            <version>${yaml-path.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.inject/guice -->
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>${guice.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.mockito/mockito-core -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>${maven-plugin-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven-site-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <executions>
                    <!-- Configuring jacoco unit test coverage data -->
                    <execution>
                        <id>prepare-agent-unit</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <destFile>
                                ${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</destFile>
                            <propertyName>surefire.jacoco.args</propertyName>
                        </configuration>
                    </execution>

                    <!-- Generating the unit test coverage report -->
                    <execution>
                        <id>report-unit</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>
                                ${project.build.directory}/jacoco-output/jacoco-unit-tests.exec</dataFile>
                            <outputDirectory>
                                ${project.reporting.outputDirectory}/jacoco-unit-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- Configuring jacoco unit integration coverage data -->
                    <execution>
                        <id>prepare-agent-integration</id>
                        <goals>
                            <goal>prepare-agent-integration</goal>
                        </goals>
                        <configuration>
                            <propertyName>failsafe.jacoco.args</propertyName>
                            <destFile>
                                ${project.build.directory}/jacoco-output/jacoco-it.exec</destFile>
                        </configuration>
                    </execution>

                    <!-- Configuring jacoco’s integration coverage report -->
                    <execution>
                        <id>after-integration-test-execution</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>
                                ${project.build.directory}/jacoco-output/jacoco-it.exec</dataFile>
                            <outputDirectory>
                                ${project.reporting.outputDirectory}/jacoco-it-report</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- Merging unit and integration test coverage data -->
                    <execution>
                        <id>merge-unit-and-integration-reports</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <fileSets>
                                <fileSet>
                                    <directory>${project.build.directory}/jacoco-output/</directory>
                                    <includes>
                                        <include>*.exec</include>
                                    </includes>
                                </fileSet>
                            </fileSets>
                            <destFile>${project.build.directory}/jacoco-output/merged.exec</destFile>
                        </configuration>
                    </execution>

                    <!-- Generating the merged unit and integration test coverage report -->
                    <execution>
                        <id>create-merged-report</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <outputDirectory>
                                ${project.reporting.outputDirectory}/jacoco-merged-test-coverage-report</outputDirectory>
                        </configuration>
                    </execution>

                    <!-- Check if the coverage report meets the thresholds -->
                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <phase>verify</phase>
                        <configuration>
                            <excludes>
                                <exclude>com/thoughtworks/mojos/*</exclude>
                            </excludes>
                            <dataFile>${project.build.directory}/jacoco-output/merged.exec</dataFile>
                            <rules>
                                <rule>
                                    <element>PACKAGE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${jacoco.package.line.coveredratio}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest.version}</version>
                <configuration>
                    <skip>${unit.only}</skip>
                    <timeoutConstant>${pit.conf.timeoutConstant}</timeoutConstant>
                    <withHistory>${pit.conf.withHistory}</withHistory>
                    <targetClasses>
                        <param>${pit.conf.targetClasses}</param>
                    </targetClasses>
                    <targetTests>
                        <param>${pit.conf.targetTests}</param>
                    </targetTests>
                    <excludedClasses>
                        <param>${pit.conf.excludedClasses}</param>
                    </excludedClasses>
                    <excludedTestClasses>
                        <param>${pit.conf.excludedTestClasses}</param>
                    </excludedTestClasses>
                </configuration>
                <dependencies>
                    <!-- https://mvnrepository.com/artifact/org.pitest/pitest-junit5-plugin -->
                    <dependency>
                        <groupId>org.pitest</groupId>
                        <artifactId>pitest-junit5-plugin</artifactId>
                        <version>${pitest.junit5.version}</version>
                    </dependency>
                </dependencies>
                <!-- <executions> -->
                <!--     <execution> -->
                <!--         <id>pit-report</id> -->
                <!--         optional, this example attached the goal into mvn test phase -->
                <!--         <phase>test</phase> -->
                <!--         <goals> -->
                <!--             <goal>mutationCoverage</goal> -->
                <!--         </goals> -->
                <!--     </execution> -->
                <!-- </executions> -->
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <dependencies>
                    <!--
                    https://mvnrepository.com/artifact/me.fabriciorby/maven-surefire-junit5-tree-reporter -->
                    <dependency>
                        <groupId>me.fabriciorby</groupId>
                        <artifactId>maven-surefire-junit5-tree-reporter</artifactId>
                        <version>${maven-surefire-junit5-tree-reporter.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <skipTests>${failsafe.only}</skipTests>
                    <reportFormat>${surefire.report.reportFormat}</reportFormat>
                    <argLine>${surefire.jacoco.args}</argLine>
                    <consoleOutputReporter>
                        <disable>${surefire.report.consoleOutputReporter}</disable>
                    </consoleOutputReporter>
                    <excludes>
                        <exclude>**/**IT.java</exclude>
                        <exclude>**/**IntTest.java</exclude>
                        <exclude>**/**IntegrationTest.java</exclude>
                    </excludes>
                    <statelessTestsetInfoReporter
                        implementation="org.apache.maven.plugin.surefire.extensions.junit5.JUnit5StatelessTestsetInfoTreeReporterUnicode">
                        <theme> ${surefire.report.theme} </theme>             <printStacktraceOnError>
                        ${surefire.report.printStacktraceOnError}</printStacktraceOnError>
                                    <printStacktraceOnFailure>
                        ${surefire.report.printStacktraceOnFailure}
                        </printStacktraceOnFailure>
                                    <printStdoutOnError>${surefire.report.printStdoutOnError}</printStdoutOnError>   
                                     <printStdoutOnSuccess>${surefire.report.printStdoutOnSuccess}</printStdoutOnSuccess> 
                                    <printStderrOnError>${surefire.report.printStderrOnError}</printStderrOnError>    
                                 <printStderrOnFailure>${surefire.report.printStderrOnFailure}</printStderrOnFailure>     
                                <printStdoutOnFailure>${surefire.report.printStdoutOnFailure}</printStdoutOnFailure>     
                           <printStderrOnSuccess>${surefire.report.printStderrOnSuccess}</printStderrOnSuccess>
                    </statelessTestsetInfoReporter>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-component-metadata</artifactId>
                <version>${plexus-component-metadata.version}</version>
            </plugin>
            <plugin>
                <groupId>com.soebes.itf.jupiter.extension</groupId>
                <artifactId>itf-maven-plugin</artifactId>
                <version>${itf.version}</version>
                <executions>
                    <execution>
                        <id>installing</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>install</goal>
                            <goal>resources-its</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${failsafe.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                    <argLine>${failsafe.jacoco.args}</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.sonatype.central</groupId>
                <artifactId>central-publishing-maven-plugin</artifactId>
                <version>0.7.0</version>
                <extensions>true</extensions>
                <configuration>
                    <publishingServerId>central</publishingServerId>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <version>3.2.7</version>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <keyname>${gpg.keyname}</keyname>
                    <passphrase>${gpg.keyname}</passphrase>
                    <gpgArguments>
                        <arg>--pinentry-mode</arg>
                        <arg>loopback</arg>
                    </gpgArguments>
                </configuration>
            </plugin>
        </plugins>
        <extensions>
            <extension>
                <groupId>com.google.cloud.artifactregistry</groupId>
                <artifactId>artifactregistry-maven-wagon</artifactId>
                <version>${com.google.cloud.artifactregistry.version}</version>
            </extension>
        </extensions>

    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-report-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <id>integration-tests</id>
                        <reports>
                            <report>failsafe-report-only</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.pitest</groupId>
                <artifactId>pitest-maven</artifactId>
                <version>${pitest.version}</version>
                <configuration>
                    <reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
                    <siteReportName>${pit.conf.siteReportName}</siteReportName>
                    <skip>${unit.only}</skip>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>report</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <scm>
        <url>https://github.com/thoughtworks/templify</url>
        <connection>scm:git:git://github.com/thoughtworks/templify.git</connection>
        <developerConnection>scm:git:ssh://git@github.com:thoughtworks/templify.git</developerConnection>
    </scm>
    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <developers>
        <developer>
            <id>BeppeTW</id>
            <name>Beppe</name>
            <email>giuseppe.pereira@thoughtworks.com</email>
        </developer>
        <developer>
            <id>Luiz-Micci</id>
            <name>Miccieli</name>
            <email>lui.miccieli@thoughtworks.com</email>
        </developer>
    </developers>
</project>


